name: Releaser

on:
  pull_request:
    types:
      - closed
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: main

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.20.0

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 16

      - name: Build for Linux
        run: GOOS=linux GOARCH=amd64 go build -o linkchecker ./cmd/linkchecker
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build for Windows
        run: GOOS=windows GOARCH=amd64 go build -o linkchecker.exe ./cmd/linkchecker
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Get previous release
        id: prev_release
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Fetch commit history
        id: commit_history
        run: |
          git fetch --unshallow --tags
          PREVIOUS_RELEASE_TAG=${{ steps.prev_release.outputs.tag_name }}
          git log --pretty=format:"- %s [%h](https://github.com/${{ github.repository }}/commit/%H)" $PREVIOUS_RELEASE_TAG..HEAD > changelog.txt
          echo "::set-output name=changelog::$(cat changelog.txt)"

      - name: Generate Changelog
        id: changelog
        run: |
          PREVIOUS_RELEASE_BODY=${{ steps.prev_release.outputs.release_body }}
          COMMIT_HISTORY=${{ steps.commit_history.outputs.changelog }}
          NEW_RELEASE_BODY="${PREVIOUS_RELEASE_BODY}
          
          ### Changelog
          ${COMMIT_HISTORY}"
          echo "::set-output name=new_body::$NEW_RELEASE_BODY"

      - name: Create Release for Linux
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          files: ./linkchecker
          prerelease: false
          body: ${{ steps.changelog.outputs.new_body }}
          tag_name: v${{ steps.prev_release.outputs.tag_name }}
          release_name: Release ${{ steps.prev_release.outputs.tag_name }} for Linux

      - name: Create Release for Windows
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          files: ./linkchecker.exe
          prerelease: false
          body: ${{ steps.changelog.outputs.new_body }}
          tag_name: v${{ steps.prev_release.outputs.tag_name }}
          release_name: Release ${{ steps.prev_release.outputs.tag_name }} for Windows
